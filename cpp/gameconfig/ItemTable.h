//Code generated by game config export tool. DO NOT EDIT.
#pragma once
#include <Singleton.h>
#include <TableBase.h>

enum ItemTypeEnum;
struct EquipAttStruct;
class ItemStruct;
typedef const ItemStruct *ItemStructPtr;
#define ItemTable TableBase<ItemStruct>::GetInstance()

//ItemStruct 道具表
struct ItemStruct
{
	//ID ID
	uint32_t ID;
	//Name 名称
	std::string Name;
	//Type 类型
	ItemTypeEnum Type;
	//Price 价格
	float Price;
	//Stack 最大堆叠数
	uint16_t Stack;
	//Test1 Test1
	std::vector<bool> Test1;
	//Test2 Test2
	std::vector<int32_t> Test2;
	//Test3 Test3
	bool Test3;
	//Test4 Test4
	std::vector<std::string> Test4;
	//Test5 Test5
	EquipAttStruct Test5;
	//Icon ICON
	uint32_t Icon;
	//Desc 描述
	std::string Desc;

	typedef uint32_t KEY_TYPE;
	KEY_TYPE GetKey() { return this->ID; }

	void Parse(const JSONValue &v)
	{
		PARSE_FIELD(ID);
		PARSE_FIELD(Name);
		PARSE_FIELD(Type);
		PARSE_FIELD(Price);
		PARSE_FIELD(Stack);
		PARSE_ARRAY(Test1, bool);
		PARSE_ARRAY(Test2, int32_t);
		PARSE_FIELD(Test3);
		PARSE_ARRAY(Test4, std::string);
		PARSE_STRUCT(Test5);
		PARSE_FIELD(Icon);
		PARSE_FIELD(Desc);
	}

	void Relate()
	{
	}
};
